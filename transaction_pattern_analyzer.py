"""
Transaction Pattern Analyzer ‚Äî –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –≤—Ö–æ–¥–æ–≤ –∏ –≤—ã—Ö–æ–¥–æ–≤ Bitcoin-—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.
"""

import requests
import sys

def fetch_transaction(txid):
    url = f"https://blockstream.info/api/tx/{txid}"
    r = requests.get(url)
    r.raise_for_status()
    return r.json()

def classify_transaction(tx):
    vin = tx['vin']
    vout = tx['vout']
    in_count = len(vin)
    out_count = len(vout)

    print(f"
üîç –ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {tx['txid']}")
    print(f"üî¢ –í—Ö–æ–¥–æ–≤: {in_count}")
    print(f"üî¢ –í—ã—Ö–æ–¥–æ–≤: {out_count}")

    if in_count == 1 and out_count == 2:
        print("üß† –í–µ—Ä–æ—è—Ç–Ω—ã–π –æ–±—ã—á–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ —Å 'change output'")
    elif in_count > 5 and out_count == 1:
        print("üê≥ –í–æ–∑–º–æ–∂–µ–Ω —Å–ª–∏–≤ —Å—Ä–µ–¥—Å—Ç–≤ —Å –±–∏—Ä–∂–∏ –∏–ª–∏ –∫–æ—à–µ–ª—å–∫–∞")
    elif in_count >= out_count and out_count > 10:
        print("üì¶ –í–µ—Ä–æ—è—Ç–Ω—ã–π 'fan-out' ‚Äî —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∞–¥—Ä–µ—Å–æ–≤")
    elif in_count > 1 and out_count == 1:
        print("üîÑ –ö–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–æ–≤")
    elif out_count == 0:
        print("‚ö†Ô∏è –í—ã—Ö–æ–¥–æ–≤ –Ω–µ—Ç ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –æ—à–∏–±–∫–∞ –∏–ª–∏ –æ—Å–æ–±—ã–π —Ç–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
    else:
        print("‚ÑπÔ∏è –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∏–ª–∏ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è")

def main():
    if len(sys.argv) != 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python transaction_pattern_analyzer.py <txid>")
        return
    txid = sys.argv[1]
    try:
        tx = fetch_transaction(txid)
        classify_transaction(tx)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ:", e)

if __name__ == "__main__":
    main()
